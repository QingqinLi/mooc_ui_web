{
  "uid" : "8bdbe3de5d34788a",
  "name" : "test_search_keyword[test_space]",
  "fullName" : "test_cases.test_search.TestSearch#test_search_keyword[test_space]",
  "historyId" : "7acefac5df9827d756d7ee6a3add25be",
  "time" : {
    "start" : 1585574694685,
    "stop" : 1585574698757,
    "duration" : 4072
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <bound method BaiduSearchBusiness.search_keyword of <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>>(' ')\n +    where <bound method BaiduSearchBusiness.search_keyword of <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>> = <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>.search_keyword\n +      where <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0> = BaiduSearchBusiness(<selenium.webdriver.chrome.webdriver.WebDriver (session=\"947468aee4375801778c1ef185fcce6e\")>)",
  "statusTrace" : "self = <test_cases.test_search.TestSearch object at 0x105164f28>\nget_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"947468aee4375801778c1ef185fcce6e\")>\nkeyword = ' '\n\n    @pytest.mark.parametrize(\n        \"keyword\",\n        [\n            \"中文\",\n            \"test\",\n            \" \",\n        ],\n        ids=[\"test_chinese\", \"test_english\", \"test_space\"]\n    )\n    def test_search_keyword(self, get_browser,keyword):\n        get_browser.get(\"https://www.baidu.com\")\n>       assert BaiduSearchBusiness(get_browser).search_keyword(keyword)\nE       assert False\nE        +  where False = <bound method BaiduSearchBusiness.search_keyword of <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>>(' ')\nE        +    where <bound method BaiduSearchBusiness.search_keyword of <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>> = <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>.search_keyword\nE        +      where <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0> = BaiduSearchBusiness(<selenium.webdriver.chrome.webdriver.WebDriver (session=\"947468aee4375801778c1ef185fcce6e\")>)\n\ntest_cases/test_search.py:24: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "get_browser",
    "time" : {
      "start" : 1585574680086,
      "stop" : 1585574683067,
      "duration" : 2981
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = <bound method BaiduSearchBusiness.search_keyword of <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>>(' ')\n +    where <bound method BaiduSearchBusiness.search_keyword of <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>> = <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>.search_keyword\n +      where <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0> = BaiduSearchBusiness(<selenium.webdriver.chrome.webdriver.WebDriver (session=\"947468aee4375801778c1ef185fcce6e\")>)",
    "statusTrace" : "self = <test_cases.test_search.TestSearch object at 0x105164f28>\nget_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"947468aee4375801778c1ef185fcce6e\")>\nkeyword = ' '\n\n    @pytest.mark.parametrize(\n        \"keyword\",\n        [\n            \"中文\",\n            \"test\",\n            \" \",\n        ],\n        ids=[\"test_chinese\", \"test_english\", \"test_space\"]\n    )\n    def test_search_keyword(self, get_browser,keyword):\n        get_browser.get(\"https://www.baidu.com\")\n>       assert BaiduSearchBusiness(get_browser).search_keyword(keyword)\nE       assert False\nE        +  where False = <bound method BaiduSearchBusiness.search_keyword of <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>>(' ')\nE        +    where <bound method BaiduSearchBusiness.search_keyword of <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>> = <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0>.search_keyword\nE        +      where <bussiness.baidu_search_business.BaiduSearchBusiness object at 0x1051571d0> = BaiduSearchBusiness(<selenium.webdriver.chrome.webdriver.WebDriver (session=\"947468aee4375801778c1ef185fcce6e\")>)\n\ntest_cases/test_search.py:24: AssertionError",
    "steps" : [ {
      "name" : "添加失败截图...",
      "time" : {
        "start" : 1585574698820,
        "stop" : 1585574699251,
        "duration" : 431
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "daf204926033b38b",
        "name" : "失败截图",
        "source" : "daf204926033b38b.png",
        "type" : "image/png",
        "size" : 103579
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "get_browser::0",
    "time" : {
      "start" : 1585574699256,
      "stop" : 1585574700067,
      "duration" : 811
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_cases"
  }, {
    "name" : "suite",
    "value" : "test_search"
  }, {
    "name" : "subSuite",
    "value" : "TestSearch"
  }, {
    "name" : "host",
    "value" : "liqingMacBook-Pro.local"
  }, {
    "name" : "thread",
    "value" : "49295-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_cases.test_search"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "keyword",
    "value" : "' '"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "8bdbe3de5d34788a.json",
  "parameterValues" : [ "' '" ]
}